{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","components/contactForm/ContactForm.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css","components/contactsList/contactsListItem/ContactsListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","onHandleChange","e","target","value","setState","onFormSubmit","preventDefault","contact","id","uuidv4","isSameContactName","props","contacts","findIndex","isSameContactPhone","alert","addNewContact","className","styles","form","onSubmit","this","label","type","pattern","title","required","onChange","addContactBtn","Component","ContactsListItem","onClickDeleteContact","contactsItem","contactName","contactsNumber","contactsButton","onClick","ContactList","filterValue","contactsList","filter","toLowerCase","includes","map","Filter","filterContiner","App","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f61fad1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContiner\":\"Filter_filterContiner__fg_DH\",\"label\":\"Filter_label__K24tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3cxL1\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const isSameContactName = this.props.contacts.findIndex(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const isSameContactPhone = this.props.contacts.findIndex(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (isSameContactName !== -1) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    } else if (isSameContactPhone !== -1) {\r\n      return alert(`Phone number ${this.state.number} is already in contacts`);\r\n    }\r\n\r\n    this.props.addNewContact(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, id, onClickDeleteContact }) => {\r\n  const removeItem = () => {\r\n    onClickDeleteContact(id);\r\n  };\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactName}>\r\n        {name}:<span className={styles.contactsNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={removeItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onClickDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\n\r\nconst ContactList = ({ contacts, filterValue, onClickDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts\r\n        .filter((contact) =>\r\n          contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n        )\r\n        .map((contact) => (\r\n          <ContactsListItem\r\n            key={contact.id}\r\n            {...contact}\r\n            onClickDeleteContact={onClickDeleteContact}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filterValue: PropTypes.string.isRequired,\r\n  onClickDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onHandleChange, filterValue }) => {\r\n  return (\r\n    <div className={styles.filterContiner}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onHandleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactsList/ContactsList\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n\n  onHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  addNewContact = (contact) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  onClickDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm\n          addNewContact={this.addNewContact}\n          contacts={this.state.contacts}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          onHandleChange={this.onHandleChange}\n          filterValue={this.state.filter}\n        />\n        <ContactList\n          onClickDeleteContact={this.onClickDeleteContact}\n          contacts={this.state.contacts}\n          filterValue={this.state.filter}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__VJVXl\",\"label\":\"ContactForm_label__13CmO\",\"addContactBtn\":\"ContactForm_addContactBtn__27Hyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsListItem_contactsItem__ZtBgF\",\"contactName\":\"ContactsListItem_contactName__JEsoP\",\"contactsNumber\":\"ContactsListItem_contactsNumber__1Sa4d\",\"contactsButton\":\"ContactsListItem_contactsButton__39b-t\"};"],"sourceRoot":""}